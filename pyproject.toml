[build-system]
requires = ["setuptools>=61.0", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "munch-group-template"
version = "0.2.13"
description = "Project description"
authors = [
    {name = "Your Name", email = "your@email.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
]
dependencies = [
    "cryptography",
    "jupyterlab>=4",
    "nbdime", 
    "seaborn",
    "scipy",
    "scikit-learn",
    "statsmodels",
]

[project.urls]
Homepage = "https://github.com/munch-group/munch-group-template"
Repository = "https://github.com/munch-group/munch-group-template"
Documentation = "https://munch-group.org/munch-group-template"

[project.scripts]
munch-group-template = "munch_group_template:munch_group_template"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["test*"]

[tool.setuptools.package-data]
munch_group_template = ["data/*.txt", "data/*.csv", "data/*.pickle", "data/*.h5"]

[tool.pixi.project]
name = "munch-group-template"
version = "0.2.13"
description = "Project description"
authors = ["Your Name <your@email.com>"]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-64", "osx-arm64", "win-64"]

[tool.pixi.dependencies]
python = ">=3.8"
git = "*"
git-lfs = "*"
gh = "*"
conda-build = "*"
cryptography = "*"
jupyterlab = ">=4"
nbdime = "*"
nodejs = "*"
seaborn = "*"
pytables = "*"
scipy = "*"
scikit-learn = "*"
statsmodels = "*"
pip = "*"

# [tool.pixi.pypi-dependencies]
# Optional PyPI dependencies can be added here
# Note: Some packages may not be available across all platforms

[tool.pixi.environments]
default = {solve-group = "default"}
dev = {features = ["dev"], solve-group = "default"}

[tool.pixi.feature.dev.dependencies]
pytest = "*"
black = "*"
ruff = "*"

[tool.pixi.tasks.init-project]
cmd = "./scripts/template_init.py && ./scripts/prune-project.sh -y"
description = "Initialize template and remove project-specific files"

[tool.pixi.tasks.install-claude]
cmd = "npm install -g @anthropic-ai/claude-code"

[tool.pixi.tasks.claude]
cmd = "bash .scripts/claude-session.sh"
[tool.pixi.tasks.claude-new]
cmd = "bash .scripts/claude-session.sh --new"

[tool.pixi.tasks.init-library]
cmd = "./scripts/prune-library.sh -y"
description = "Remove files not relevant to library development"

[tool.pixi.tasks.init-template]
cmd = "./scripts/template_init.py"
description = "Initialize template by renaming project files"

[tool.pixi.tasks.install-dev]
cmd = "pip install -e ."
description = "Install the package in development mode"

[tool.pixi.tasks.docs]
cmd = "./scripts/docs-run-notebooks.sh && ./scripts/docs-build-render.sh"
description = "Run documentation notebooks and build quartodoc api docs"

[tool.pixi.tasks.git-remove-untracked]
cmd = "git clean -fd"
description = "Removes untracked files and directories but respects your .gitignores"

[tool.pixi.tasks.test]
cmd = "python -m unittest"
description = "Run tests"

[tool.pixi.tasks.release]
args = [
  { "arg" = "kind", "default" = "patch" },  # can be --patch, --minor, --major
]
cmd = "./scripts/bump_version.py --{{ kind }}  &&  git add -u &&  git commit -m '{{ kind }} version bump' &&  git push && ./scripts/release-tag.sh"
description = "Bump version patch and build/release conda packages"
