[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Title",
    "section": "",
    "text": "These pages are generated from a Git repository…"
  },
  {
    "objectID": "data/Readme.html",
    "href": "data/Readme.html",
    "title": "Data files tracked with Git",
    "section": "",
    "text": "Data files tracked with Git"
  },
  {
    "objectID": "notebooks/example.html",
    "href": "notebooks/example.html",
    "title": "Workplace interaction",
    "section": "",
    "text": "Import some plotting libraries and set some defaults:\nimport sys\nimport numpy as np\nimport pandas as pd\nfrom IPython.display import display, Markdown\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\nsns.set_style(\"whitegrid\")\n\nimport random\nrandom_seed = 5\n\nsys.path.append('..')\nfrom global_params import load_params\n%config InlineBackend.figure_formats = ['svg']\nparams = load_params('../global_params.yml')\nparams\n\n{'questions': ['Blah blah blah',\n               'Blah blah blah',\n               'Blah blah blah',\n               'Blah blah blah'],\n 'sample_size': 24}\nparams.sample_size\n\n24"
  },
  {
    "objectID": "notebooks/example.html#sampling",
    "href": "notebooks/example.html#sampling",
    "title": "Workplace interaction",
    "section": "Sampling",
    "text": "Sampling\n\nsubjects = pd.read_csv('../data/data_table.csv')\nassert subjects.index.size == params.sample_size\n\n\nTip:\nBy adding a label and caption to a cell displaying a table, you can refer to that table elsewhere and insert it in a manuscript.\n\n\nsubjects\n\n\n\nTable 1: People included in the analysis.\n\n\n\n\n\n\n\n\n\n\nname\nage\nsex\nposition\nnationality\n\n\n\n\n0\nJulie\n27\nF\nPhDstudent\nDK\n\n\n1\nThomas\n33\nM\nPostdoc\nGB\n\n\n2\nEmilie\n23\nF\nPhDstudent\nCH\n\n\n3\nSofie\n31\nF\nPostdoc\nDK\n\n\n4\nSara\n29\nF\nPostdoc\nUS\n\n\n5\nCecilie\n34\nF\nPostdoc\nDK\n\n\n6\nAnders\n32\nM\nPhDstudent\nUK\n\n\n7\nEmma\n42\nF\nProfessor\nDK\n\n\n8\nCaroline\n31\nF\nPhDstudent\nDK\n\n\n9\nLaura\n30\nF\nPostdoc\nDK\n\n\n10\nMikkel\n33\nM\nPostdoc\nNL\n\n\n11\nJens\n27\nM\nPhDstudent\nDK\n\n\n12\nAndreas\n29\nM\nPhDstudent\nDK\n\n\n13\nJakob\n28\nM\nPhDstudent\nDK\n\n\n14\nMathilde\n61\nF\nProfessor\nDK\n\n\n15\nKatrine\n35\nF\nPostdoc\nDK\n\n\n16\nPoul\n30\nM\nPostdoc\nDK\n\n\n17\nAnna\n26\nF\nPhDstudent\nDK\n\n\n18\nPeter\n42\nM\nProfessor\nGB\n\n\n19\nIda\n53\nF\nPostdoc\nDK\n\n\n20\nFreja\n30\nF\nPostdoc\nDK\n\n\n21\nMaria\n39\nF\nProfessor\nUK\n\n\n22\nAmalie\n29\nF\nPhDstudent\nDK\n\n\n23\nCamilla\n35\nF\nPostdoc\nDK\n\n\n\n\n\n\n\n\n\n\n\nTip:\nBy generaing markdown for descriptions that will eventually end up in the manuscript, you can imbed python values. It also ensures that the manuscript exactly reflects the notebook.\n\n\n\nThe 24 subjects from workplaces in Denmark were interviewed …. blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah"
  },
  {
    "objectID": "notebooks/example.html#interviews",
    "href": "notebooks/example.html#interviews",
    "title": "Workplace interaction",
    "section": "Interviews",
    "text": "Interviews\n\n\nThe 24 subjects were asked to score the follow statements:\n\nBlah blah blah\nBlah blah blah\nBlah blah blah\nBlah blah blah\n\n\n\nIn interviewed {python} params.sample_size workplace individuals were interviewed by …. blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah,\n\n\ndf = pd.DataFrame({'name': subjects.name, \n                   'seniority': np.random.randint(0, 5, params.sample_size), \n                   'age': subjects.age})\ndf['informality'] = np.random.normal(loc=10, scale=1, size=params.sample_size)\ndf\n\n\n\n\n\n\n\n\nname\nseniority\nage\ninformality\n\n\n\n\n0\nJulie\n2\n27\n10.061504\n\n\n1\nThomas\n2\n33\n9.795845\n\n\n2\nEmilie\n0\n23\n10.704674\n\n\n3\nSofie\n4\n31\n9.995386\n\n\n4\nSara\n1\n29\n9.384324\n\n\n5\nCecilie\n4\n34\n9.617037\n\n\n6\nAnders\n3\n32\n8.822115\n\n\n7\nEmma\n3\n42\n8.654268\n\n\n8\nCaroline\n0\n31\n10.571754\n\n\n9\nLaura\n3\n30\n12.278083\n\n\n10\nMikkel\n2\n33\n10.181373\n\n\n11\nJens\n4\n27\n11.043315\n\n\n12\nAndreas\n3\n29\n10.194166\n\n\n13\nJakob\n2\n28\n9.740300\n\n\n14\nMathilde\n2\n61\n8.671047\n\n\n15\nKatrine\n1\n35\n10.177327\n\n\n16\nPoul\n4\n30\n9.894090\n\n\n17\nAnna\n1\n26\n7.958770\n\n\n18\nPeter\n2\n42\n11.287880\n\n\n19\nIda\n0\n53\n10.254190\n\n\n20\nFreja\n0\n30\n11.093569\n\n\n21\nMaria\n0\n39\n10.223915\n\n\n22\nAmalie\n1\n29\n9.613552\n\n\n23\nCamilla\n0\n35\n9.975990\n\n\n\n\n\n\n\n\nsns.scatterplot(x='age', y='informality', data=df, hue='seniority', palette='viridis')\nplt.ylabel('How informal you can be')\nplt.xlabel('Age')\nplt.legend(title='Seniority', loc='lower right', labels=['Undergrad', 'Postgrad', 'PhD', 'Postdoc', 'Professor'])\nplt.ylim(bottom=0) ;\n\n\n\n\n\n\n\nFigure 1: Interaction among Danes: How Danes interact is has very little to do with age and seniority, compared to most other contries.\n\n\n\n\n\nSeems Danish people act very informally unaffected by age and seniority.\n\ninformality_age_cor = df.informality.corr(df.age)\ninformality_age_cor\n\n-0.1949220780248677\n\n\n\ninformality_seniority_cor = df.informality.corr(df.seniority)\ninformality_seniority_cor\n\n-0.05515869516915789\n\n\n\n\nThe correlation between informality and age was -0.195 and the correlation between informality and seniority was -0.055.\n\n\n\nsns.lmplot(x='age', y='informality', data=df, hue='seniority', palette='viridis')\nplt.ylabel('How informal you can be')\nplt.xlabel('Age') ;\n\n\n\n\n\n\n\nFigure 2: Interaction among Danes: Regressions of informality against age for five levels of seniority."
  }
]